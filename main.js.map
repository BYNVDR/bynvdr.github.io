{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCEds7abmJXm7Vj2JOFaSu6a1cIMqJYjZo\",\n    authDomain: \"scloud-659bd.firebaseapp.com\",\n    projectId: \"scloud-659bd\",\n    storageBucket: \"scloud-659bd.appspot.com\",\n    messagingSenderId: \"832589533425\",\n    appId: \"1:832589533425:web:140e979cd7be3f4bca5950\",\n    measurementId: \"G-03FTQM8LRR\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { mergeMapTo } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <button (click)=\"requestPermission()\">\n    Hello this is a chat app. You should let us send you notifications for this reason.\n  </button><br>\n  <button (click)=\"listen()\">\n    Get notified!\n  </button><br><br>\n\n  <button (click)=\"send()\">\n    Go nutify!\n  </button><br><br>\n  `\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private afMessaging: AngularFireMessaging) { }\n\n\n  ngOnInit() {\n    console.log('ok, we init, go listen messages');\n    \n    this.afMessaging.messages\n      .subscribe((message) => { console.log(message); });\n  }\n\n  requestPermission() {\n    this.afMessaging.requestPermission\n      .pipe(mergeMapTo(this.afMessaging.tokenChanges))\n      .subscribe(\n        (token) => { console.log('Permission granted! Save to the server!', token); },\n        (error) => { console.error(error); },  \n      );\n  }\n\n  listen() {\n    this.afMessaging.messages\n      .subscribe((message) => { console.log(message); });\n  }\n  send() {\n    this.afMessaging.getToken.subscribe(token => {\n      const key = 'BKMXf-RGn51MY2SKQcBMiq7ho9G9G_tfeoEKZp3sXRJkohmj2u-mmPcYHzktzpltUPe2s8xttBnaRvu_YR19sv8';\n      fetch('https://fcm.googleapis.com/fcm/send', {\n                method: 'POST',\n                headers: {\n                    'Authorization': 'key=' + key,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    // Firebase loses 'image' from the notification.\n                    // And you must see this: https://github.com/firebase/quickstart-js/issues/71\n                    data: {\n                      \"notification\": {\n                        \"title\": \"Ералаш\",\n                        \"body\": \"Начало в 21:00\",\n                        \"icon\": \"https://eralash.ru.rsz.io/sites/all/themes/eralash_v5/logo.png?width=40&height=40\",\n                        \"click_action\": \"http://eralash.ru/\"\n                      },\n                      \"to\": \"eLwXgxei_OluWWt2x8hAi4:APA91bFkXscsn6p0JI5fieOVDPYlV-8_sioZDLrMuZNHCPLgXnKD79uhNFKuBnYIG7Kepli6qF1BWeCAY4gGey784kfRh-y9_AZPiQABKi-sI9Ru90i3Jwf_ykV-aLy7X9lU5BzkRHRc\"\n                    },\n                    to: token\n                })\n            }).then(function(response) {\n                return response.json();\n            }).then(function(json) {\n                console.log('Response', json);\n            }).catch(function(error) {\n                console.log('error send notify', error);\n                \n            });\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireMessagingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}